{"expireTime":9007200852811046000,"key":"gatsby-plugin-mdx-entire-payload-ae0f213e382a2a35000b79c7663b8870-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"OS Module","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":13,"offset":13},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":13,"offset":13},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Node comes with multiple modules out of the box such as fs, os and much more.","position":{"start":{"line":4,"column":1,"offset":15},"end":{"line":4,"column":78,"offset":92},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":15},"end":{"line":4,"column":78,"offset":92},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const os = require('os');\nconsole.log(os.platform(), os.homedir());","position":{"start":{"line":6,"column":1,"offset":94},"end":{"line":9,"column":4,"offset":179},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"File System (FS Module)","position":{"start":{"line":11,"column":4,"offset":184},"end":{"line":11,"column":27,"offset":207},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":181},"end":{"line":11,"column":27,"offset":207},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Operations including reading, writing, data streams etc. are available by default through the fs module","position":{"start":{"line":13,"column":1,"offset":209},"end":{"line":13,"column":104,"offset":312},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":209},"end":{"line":13,"column":104,"offset":312},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"const fs = require('fs')","position":{"start":{"line":15,"column":1,"offset":314},"end":{"line":15,"column":27,"offset":340},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":314},"end":{"line":15,"column":27,"offset":340},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Inbuilt Modules\"}","position":{"start":{"line":18,"column":1,"offset":343},"end":{"line":18,"column":56,"offset":398},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":18,"column":56,"offset":398}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Inbuilt Modules\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"OS Module\"), mdx(\"p\", null, \"Node comes with multiple modules out of the box such as fs, os and much more.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const os = require('os');\\nconsole.log(os.platform(), os.homedir());\\n\")), mdx(\"h2\", null, \"File System (FS Module)\"), mdx(\"p\", null, \"Operations including reading, writing, data streams etc. are available by default through the fs module\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"const fs = require('fs')\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Inbuilt Modules\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`OS Module`}</h2>\n    <p>{`Node comes with multiple modules out of the box such as fs, os and much more.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const os = require('os');\nconsole.log(os.platform(), os.homedir());\n`}</code></pre>\n    <h2>{`File System (FS Module)`}</h2>\n    <p>{`Operations including reading, writing, data streams etc. are available by default through the fs module`}</p>\n    <p><inlineCode parentName=\"p\">{`const fs = require('fs')`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}