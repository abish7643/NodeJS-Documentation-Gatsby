{"expireTime":9007200853034370000,"key":"gatsby-plugin-mdx-entire-payload-356d8e40068dde58dd00c2d8ea4d6846-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Express","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Express is a framework which is used to make HTTP requests as easy as possible and also include other host of features.","position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":120,"offset":132},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":120,"offset":132},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Why Express?","position":{"start":{"line":6,"column":5,"offset":138},"end":{"line":6,"column":17,"offset":150},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":134},"end":{"line":6,"column":17,"offset":150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You saw how to setup an HTTP request before. If it's a really large app, these routing can be a pain in the ass. Enough ditching http, express has a ton of features with very low amount of configuration required as well as it's literally easy to customize. For example we'll be using ejs for adding dynamic data in the html file. It's literally easy to integrate any kind of view engine like ejs, pug etc with express.","position":{"start":{"line":8,"column":1,"offset":152},"end":{"line":8,"column":419,"offset":570},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":152},"end":{"line":8,"column":419,"offset":570},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"So Express is a framework to handle server side logic in an easy and elegant manner.","position":{"start":{"line":10,"column":3,"offset":574},"end":{"line":10,"column":87,"offset":658},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":574},"end":{"line":10,"column":87,"offset":658},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":572},"end":{"line":10,"column":87,"offset":658},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Make a Express App","position":{"start":{"line":12,"column":5,"offset":664},"end":{"line":12,"column":23,"offset":682},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":660},"end":{"line":12,"column":23,"offset":682},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Import Express","position":{"start":{"line":13,"column":3,"offset":685},"end":{"line":13,"column":17,"offset":699},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":685},"end":{"line":13,"column":17,"offset":699},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const express = require(\"express\");","position":{"start":{"line":15,"column":3,"offset":705},"end":{"line":17,"column":6,"offset":762},"indent":[3,3]}}],"position":{"start":{"line":13,"column":1,"offset":683},"end":{"line":18,"column":1,"offset":763},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make an Instance of Express","position":{"start":{"line":19,"column":3,"offset":766},"end":{"line":19,"column":30,"offset":793},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":766},"end":{"line":19,"column":30,"offset":793},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const app = express();","position":{"start":{"line":21,"column":3,"offset":799},"end":{"line":23,"column":6,"offset":843},"indent":[3,3]}}],"position":{"start":{"line":19,"column":1,"offset":764},"end":{"line":24,"column":1,"offset":844},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Listen to Request","position":{"start":{"line":25,"column":3,"offset":847},"end":{"line":25,"column":20,"offset":864},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":847},"end":{"line":25,"column":20,"offset":864},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"app.listen(3000); // Port 3000","position":{"start":{"line":27,"column":3,"offset":870},"end":{"line":29,"column":6,"offset":922},"indent":[3,3]}}],"position":{"start":{"line":25,"column":1,"offset":845},"end":{"line":30,"column":1,"offset":923},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Handle Routes","position":{"start":{"line":31,"column":3,"offset":926},"end":{"line":31,"column":16,"offset":939},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":926},"end":{"line":31,"column":16,"offset":939},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Express sets the Content-Type and Status Code Automatically.","position":{"start":{"line":33,"column":3,"offset":943},"end":{"line":33,"column":63,"offset":1003},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":943},"end":{"line":33,"column":63,"offset":1003},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"app.get(\"/\", (req, res) => {\n  res.sendFile(\"./views/index.html\", { root: __dirname });\n  // Express looks for a absolute path => __dirname has to be passed\n}","position":{"start":{"line":35,"column":3,"offset":1009},"end":{"line":40,"column":6,"offset":1195},"indent":[3,3,3,3,3]}}],"position":{"start":{"line":31,"column":1,"offset":924},"end":{"line":40,"column":6,"offset":1195},"indent":[1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":13,"column":1,"offset":683},"end":{"line":40,"column":6,"offset":1195},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Introduction\"}","position":{"start":{"line":44,"column":1,"offset":1199},"end":{"line":44,"column":53,"offset":1251},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":44,"column":53,"offset":1251}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Express\"), mdx(\"p\", null, \"Express is a framework which is used to make HTTP requests as easy as possible and also include other host of features.\"), mdx(\"h3\", null, \"Why Express?\"), mdx(\"p\", null, \"You saw how to setup an HTTP request before. If it's a really large app, these routing can be a pain in the ass. Enough ditching http, express has a ton of features with very low amount of configuration required as well as it's literally easy to customize. For example we'll be using ejs for adding dynamic data in the html file. It's literally easy to integrate any kind of view engine like ejs, pug etc with express.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"So Express is a framework to handle server side logic in an easy and elegant manner.\")), mdx(\"h3\", null, \"Make a Express App\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Import Express\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const express = require(\\\"express\\\");\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Make an Instance of Express\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const app = express();\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Listen to Request\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.listen(3000); // Port 3000\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Handle Routes\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Express sets the Content-Type and Status Code Automatically.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.get(\\\"/\\\", (req, res) => {\\n  res.sendFile(\\\"./views/index.html\\\", { root: __dirname });\\n  // Express looks for a absolute path => __dirname has to be passed\\n}\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Introduction\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Express`}</h2>\n    <p>{`Express is a framework which is used to make HTTP requests as easy as possible and also include other host of features.`}</p>\n    <h3>{`Why Express?`}</h3>\n    <p>{`You saw how to setup an HTTP request before. If it's a really large app, these routing can be a pain in the ass. Enough ditching http, express has a ton of features with very low amount of configuration required as well as it's literally easy to customize. For example we'll be using ejs for adding dynamic data in the html file. It's literally easy to integrate any kind of view engine like ejs, pug etc with express.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`So Express is a framework to handle server side logic in an easy and elegant manner.`}</p>\n    </blockquote>\n    <h3>{`Make a Express App`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Import Express`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`const express = require(\"express\");\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Make an Instance of Express`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`const app = express();\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Listen to Request`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`app.listen(3000); // Port 3000\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Handle Routes`}</p>\n        <p parentName=\"li\">{`Express sets the Content-Type and Status Code Automatically.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`app.get(\"/\", (req, res) => {\n  res.sendFile(\"./views/index.html\", { root: __dirname });\n  // Express looks for a absolute path => __dirname has to be passed\n}\n`}</code></pre>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}