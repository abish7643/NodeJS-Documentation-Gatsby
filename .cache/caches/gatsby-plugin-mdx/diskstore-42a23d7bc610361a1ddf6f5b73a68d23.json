{"expireTime":9007200852781261000,"key":"gatsby-plugin-mdx-entire-payload-bc47c7ef16402e7fe0265d7ce0ef7451-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"Some Methods From The Global Objects","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":41,"offset":41},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":41,"offset":41},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"setTimeout(() => {\n  console.log(\"Wait for Next 3 Second\");\n  clearInterval(interval); // interval stop after timeout\n}, 3000);\n\nconst interval = setInterval(() => {\n  console.log(\"Runs Every Second\");\n}, 1000);","position":{"start":{"line":3,"column":1,"offset":42},"end":{"line":12,"column":4,"offset":271},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting the path of directory & file","position":{"start":{"line":14,"column":5,"offset":277},"end":{"line":14,"column":41,"offset":313},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":273},"end":{"line":14,"column":41,"offset":313},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"console.log(__dirname);\nconsole.log(__filename);","position":{"start":{"line":16,"column":1,"offset":315},"end":{"line":19,"column":4,"offset":381},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Global Object\"}","position":{"start":{"line":21,"column":1,"offset":383},"end":{"line":21,"column":54,"offset":436},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":21,"column":54,"offset":436}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Global Object\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Some Methods From The Global Objects\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"setTimeout(() => {\\n  console.log(\\\"Wait for Next 3 Second\\\");\\n  clearInterval(interval); // interval stop after timeout\\n}, 3000);\\n\\nconst interval = setInterval(() => {\\n  console.log(\\\"Runs Every Second\\\");\\n}, 1000);\\n\")), mdx(\"h3\", null, \"Getting the path of directory & file\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"console.log(__dirname);\\nconsole.log(__filename);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Global Object\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3>{`Some Methods From The Global Objects`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`setTimeout(() => {\n  console.log(\"Wait for Next 3 Second\");\n  clearInterval(interval); // interval stop after timeout\n}, 3000);\n\nconst interval = setInterval(() => {\n  console.log(\"Runs Every Second\");\n}, 1000);\n`}</code></pre>\n    <h3>{`Getting the path of directory & file`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`console.log(__dirname);\nconsole.log(__filename);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}