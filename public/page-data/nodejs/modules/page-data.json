{"componentChunkName":"component---src-templates-docs-js","path":"/nodejs/modules","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate","docsLocation":"https://github.com/abish7643/Project-Documentation-Gatsby/tree/master/content"}},"mdx":{"fields":{"id":"643d7c67-3bc5-5fb9-bd6d-31847f38f033","title":"Inbuilt Modules","slug":"/nodejs/modules"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Inbuilt Modules\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"OS Module\"), mdx(\"p\", null, \"Node comes with multiple modules out of the box such as fs, os and much more.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"const os = require('os');\\nconsole.log(os.platform(), os.homedir());\\n\")), mdx(\"h2\", null, \"File System (FS Module)\"), mdx(\"p\", null, \"Operations including reading, writing, data streams etc. are available by default through the fs module\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"const fs = require('fs')\")), mdx(\"h2\", null, \"Methods with FS Module\"), mdx(\"p\", null, \"Methods from fs module are asychronous since it requires some amout of time to execute.\"), mdx(\"h3\", null, \"Reading Files {#custom-id-one}\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"fs.readFile('./docs/blog1.txt', { encoding: 'utf-8' }, (err, data) => {\\n  if (err) {\\n    console.log(err);\\n  }\\n  console.log(data);\\n  //Returns a buffer if encoding is not specified\\n  // Else toString method has to be used to convert to readable format.\\n});\\n\")), mdx(\"h3\", null, \"Writing Files\"), mdx(\"p\", null, \"writeFile Method is used to write a file. If a file doesn't exist writeFile method creates one for us and writes onto it. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: A file can also be created using the open method & data can be appended to the file using the append method.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"fs.writeFile('./docs/blog2.txt', 'Hey Guys!', () => {\\n  console.log('Files Was Written');\\n});\\n\")), mdx(\"h3\", null, \"Deleting Files\"), mdx(\"p\", null, \"existsSync Method is used to check whether the file exist or not, this is recommended inorder to handle error that may occur if file doesn't exist. unLink method is used to delete the file.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"if (fs.existsSync('./docs/docs.txt')) {\\n  fs.unlink('./docs/docs.txt', err => {\\n    if (err) {\\n      console.log(err);\\n    }\\n    console.log('file deleted');\\n  });\\n}\\n\")), mdx(\"h3\", null, \"Creating or Removing Directories\"), mdx(\"p\", null, \"existsSync is used to check whether the folder exists or not & mkdir method is used to create a folder while rmdir is used to remove a folder.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"if (!fs.existsSync('./assets')) {\\n  fs.mkdir('./assets', err => {\\n    if (err) {\\n      console.log(err);\\n    }\\n    console.log('folder created');\\n  });\\n} else {\\n  fs.rmdir('./assets', err => {\\n    if (err) {\\n      console.log(err);\\n    }\\n    console.log('folder removed');\\n  });\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#os-module","title":"OS Module"},{"url":"#file-system-fs-module","title":"File System (FS Module)"},{"url":"#methods-with-fs-module","title":"Methods with FS Module","items":[{"url":"#reading-files-custom-id-one","title":"Reading Files {#custom-id-one}"},{"url":"#writing-files","title":"Writing Files"},{"url":"#deleting-files","title":"Deleting Files"},{"url":"#creating-or-removing-directories","title":"Creating or Removing Directories"}]}]},"parent":{"__typename":"File","relativePath":"nodejs/modules.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/nodejs/streams","title":"Streams and Buffer"}}},{"node":{"fields":{"slug":"/nodejs/modules","title":"Inbuilt Modules"}}},{"node":{"fields":{"slug":"/nodejs/http server","title":"Create Server Using HTTP"}}},{"node":{"fields":{"slug":"/express","title":"Express JS"}}},{"node":{"fields":{"slug":"/nodejs/importingtojs","title":"Importing From Other JS Files"}}},{"node":{"fields":{"slug":"/nodejs/global object","title":"Global Object"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/express/2-ejs-express","title":"Using EJS"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/express/3-otherroutes","title":"Routes"}}},{"node":{"fields":{"slug":"/nodejs","title":"Node JS"}}},{"node":{"fields":{"slug":"/express/1-introduction","title":"Express App"}}}]}},"pageContext":{"id":"643d7c67-3bc5-5fb9-bd6d-31847f38f033"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}