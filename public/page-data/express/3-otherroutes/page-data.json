{"componentChunkName":"component---src-templates-docs-js","path":"/express/3-otherroutes","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate","docsLocation":"https://github.com/abish7643/Project-Documentation-Gatsby/tree/master/content"}},"mdx":{"fields":{"id":"f3c2d1dc-8128-5fe1-9f02-50996ccf0df9","title":"Routes","slug":"/express/3-otherroutes"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Routes\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Redirect Page\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Express automatically sets the status code of redirect\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.get(\\\"/about-me\\\", (req, res) => {\\n  res.redirect(\\\"about\\\"); \\n});\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Using Static Files\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Convectionally a public folder is created to serve static files. Static files can be images, css etc. Make a 'public' directory and add static files.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.use(express.static(\\\"public\\\"));\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"404 Page\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The use method in Express will run wherever want. If any of the request url doesn't match a 404 page has to be given back. Therefore this use method along the 404 page has to reside at the bottom of the code so that after checking each and every route if nothing matches, this will fire!\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"app.use((req, res) => {\\n  res.status(404).render(\\\"404\\\");\\n});\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Note: Express executes the above block each and every time no other route matches, therefore it doesn't know that this is a 404 error page. So has to chain status of 404 explicitely.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"__typename":"File","relativePath":"express/3-otherroutes.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/nodejs/streams","title":"Streams and Buffer"}}},{"node":{"fields":{"slug":"/nodejs/modules","title":"Inbuilt Modules"}}},{"node":{"fields":{"slug":"/nodejs/http server","title":"Create Server Using HTTP"}}},{"node":{"fields":{"slug":"/express","title":"Express JS"}}},{"node":{"fields":{"slug":"/nodejs/importingtojs","title":"Importing From Other JS Files"}}},{"node":{"fields":{"slug":"/nodejs/global object","title":"Global Object"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/express/2-ejs-express","title":"Using EJS"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/express/3-otherroutes","title":"Routes"}}},{"node":{"fields":{"slug":"/nodejs","title":"Node JS"}}},{"node":{"fields":{"slug":"/express/1-introduction","title":"Express App"}}}]}},"pageContext":{"id":"f3c2d1dc-8128-5fe1-9f02-50996ccf0df9"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}